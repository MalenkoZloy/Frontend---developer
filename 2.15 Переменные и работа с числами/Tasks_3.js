/*
Задача 3
Цели
Попрактиковаться в написании универсального кода, поддерживающего различные ситуации. Научиться применять Math.random и другие функции объекта Math.

Что нужно сделать
Напишите генератор двух случайных чисел в диапазоне между n и m включительно. Учтите, что n и m могут быть отрицательными, а также может быть n > m или n < m.
Выведите два произвольных числа в консоль с помощью console.log.
Сравните два полученных числа. Выведите результаты их сравнения >, <, ≥, ≤, ===, ≠ с помощью console.log.
Проверка результата
Для проверки подставляйте различные значения m и n и смотрите на корректность результата. Так как числа случайные, для одного набора входных параметров рекомендуется запустить код 5–10 раз. Примеры чисел m и n, для которых алгоритм должен корректно работать:

n = 0, m = 100;
n = 2, m = 5;
n = 100, m = −5;
n = -3, m = −10.
Критерии оценки
Алгоритм работает для любых значений m и n, корректно вычисляются дробные части и выводятся результаты сравнения.

Советы и рекомендации
Случайные числа от m до n мы уже генерировали на одном из занятий, так что сложность задачи не в этом.
Для определения максимального и минимального значения вы можете использовать специальные функции объекта Math (min/max), о которых было рассказано в одном из видео этого модуля.
*/

const testCase = [
    {n:0, m:100},
    {n:2, m:5},
    {n:100, m:-5},
    {n:-3, m:-10}
]

function randomAll(n, m) {
    const maxRandom = Math.max(n, m);
    const minRandom = Math.min(n, m);
    return Math.random() * (maxRandom - minRandom + 1) + minRandom;
}

function comparison(n, m) {
    return `Результат сравнения: ${n}, ${m};
    Результат: '>' ${n > m};
    Результат: '<' ${n < m};
    Результат: '>=' ${n >= m};
    Результат: '<=' ${n <= m};
    Результат: '===' ${n === m};
    Результат: '!==' ${n !== m}.`
}

testCase.forEach(testCase =>{
    const randomN = randomAll(testCase.n, testCase.m);
    const randomM = randomAll(testCase.n, testCase.m);
    console.log(`Вывожу два рандомных числа: ${randomN} ${randomM};
    ${comparison(randomN, randomM)}
    `);
})
